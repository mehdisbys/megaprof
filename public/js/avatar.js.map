{"version":3,"sources":["avatar.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"avatar.js","sourcesContent":["/*\n     * LetterAvatar\n     *\n     * Artur Heinze\n     * Create Letter avatar based on Initials\n     * based on https://gist.github.com/leecrossley/6027780\n     */\n(function (w, d) {\n\n\n    function LetterAvatar(name, size) {\n\n        name = name || '';\n        size = size || 75;\n\n        var colours = [\n                \"#1abc9c\", \"#2ecc71\", \"#3498db\", \"#9b59b6\", \"#34495e\", \"#16a085\", \"#27ae60\", \"#2980b9\", \"#8e44ad\", \"#2c3e50\",\n                \"#f1c40f\", \"#e67e22\", \"#e74c3c\", \"#ecf0f1\", \"#95a5a6\", \"#f39c12\", \"#d35400\", \"#c0392b\", \"#bdc3c7\", \"#7f8c8d\"\n            ],\n\n            nameSplit = String(name).toUpperCase().split(' '),\n            initials, charIndex, colourIndex, canvas, context, dataURI;\n\n\n        if (nameSplit.length == 1) {\n            initials = nameSplit[0] ? nameSplit[0].charAt(0) : '?';\n        } else {\n            initials = nameSplit[0].charAt(0) + nameSplit[1].charAt(0);\n        }\n\n        if (w.devicePixelRatio) {\n            size = (size * w.devicePixelRatio);\n        }\n\n        charIndex = (initials == '?' ? 72 : initials.charCodeAt(0)) - 64;\n        colourIndex = charIndex % 20;\n        canvas = d.createElement('canvas');\n        canvas.width = size;\n        canvas.height = size;\n        context = canvas.getContext(\"2d\");\n\n        context.fillStyle = colours[colourIndex - 1];\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.font = Math.round(canvas.width / 2) + \"px Arial\";\n        context.textAlign = \"center\";\n        context.fillStyle = \"#FFF\";\n        context.fillText(initials, size / 2, size / 1.5);\n\n        dataURI = canvas.toDataURL();\n        canvas = null;\n\n        return dataURI;\n    }\n\n    LetterAvatar.transform = function () {\n\n        Array.prototype.forEach.call(d.querySelectorAll('img[avatar]'), function (img, name) {\n            name = img.getAttribute('avatar');\n            img.src = LetterAvatar(name, img.getAttribute('width'));\n            img.removeAttribute('avatar');\n            img.setAttribute('alt', name);\n        });\n    };\n\n\n    // AMD support\n    if (typeof define === 'function' && define.amd) {\n\n        define(function () {\n            return LetterAvatar;\n        });\n\n        // CommonJS and Node.js module support.\n    } else if (typeof exports !== 'undefined') {\n\n        // Support Node.js specific `module.exports` (which can be a function)\n        if (typeof module != 'undefined' && module.exports) {\n            exports = module.exports = LetterAvatar;\n        }\n\n        // But always support CommonJS module 1.1.1 spec (`exports` cannot be a function)\n        exports.LetterAvatar = LetterAvatar;\n\n    } else {\n\n        window.LetterAvatar = LetterAvatar;\n\n        d.addEventListener('DOMContentLoaded', function (event) {\n            LetterAvatar.transform();\n        });\n    }\n\n})(window, document);"]}